export default {
    'gui.menuBar.seeProjectPage': 'プロジェクトページを見る',
    'gui.loader.creating': 'プロジェクトを作成中...',
    'gui.smalruby3.crashMessage.description': '申し訳ありません。スモウルビーがクラッシュしたようです。このバグは自動的にスモウルビーチームに報告されました。ページを再読み込みしてください。',
    'gui.smalruby3.gui.defaultProjectTitle': 'スモウルビーのプロジェクト',
    'gui.smalruby3.gui.rubyTab': 'ルビー',
    'gui.smalruby3.previewInfo.betawelcome': 'スモウルビー3.0 ベータ版にようこそ!',
    'gui.smalruby3.previewInfo.label': 'スモウルビー3.0を試してみる',
    'gui.smalruby3.previewInfo.invitation': '私たちは次世代のスモウルビーを開発中です。お試しください!',
    'gui.smalruby3.previewInfo.welcome': 'スモウルビー3.0 プレビュー版にようこそ!',
    'gui.smalruby3.menuBar.downloadRubyCodeToComputer': 'コンピュータにルビーを保存する',
    'gui.smalruby3.menuBar.generateRubyFromCode': 'コードからルビーに変換します',
    'gui.smalruby3.unsupportedBrowser.description': '申し訳ありません。スモウルビー3.0はInternet Explorer、Vivaldi、Opera、Silkをサポートしていません。Google Chrome、Mozilla Firefox、Microsoft Edgeのような新しいブラウザの利用をお勧めします。',
    'gui.smalruby3.webglModal.description': '残念ながら、ブラウザーやコンピューターが{webGlLink}ようです。この技術はスモウルビー3.0の実行に必須です。',
    'gui.smalruby3.alerts.convertRubyToBlocksError': 'ルビーからコードに変換できませんでした。ルビーを修正してください！',
    'gui.smalruby3.telemetryOptIn.label': 'スモウルビーを改善するための利用状況の報告',
    'gui.smalruby3.telemetryOptIn.body1': 'スモウルビーの開発者は世界中でスモウルビーがどのように使われているのかを理解したいと考えています。その手助けのために、みなさんのスモウルビーの利用状況をスモウルビーの開発者に提供していただけないでしょうか。',
    'gui.smalruby3.telemetryOptIn.body2': '提供していただく情報にはどの言語を選択したか、どのブロックを使ったか、保存・読み込み・プロジェクトのアップロードなどのイベントを含みます。ただし、ユーザ名などの個人的な情報は一切含みません。',
    'gui.telemetryOptIn.buttonTextNo': 'いいえ、結構です。',
    'gui.smalruby3.rubyToBlocksConverter.couldNotConvertPremitive': '「{ SOURCE }」はブロックに変換できません。',
    'gui.smalruby3.rubyToBlocksConverter.wrongInstruction': '「{ SOURCE }」は命令がまちがっています。',
    'gui.smalruby3.telemetryOptIn.buttonTextYes': 'はい、スモウルビーの改善に協力します。',
    'gui.smalruby3.extension.mesh.name': 'メッシュ',
    'gui.smalruby3.extension.mesh.description': 'ネットワーク上でユーザー間のやりとりを行う。',
    'mesh.categoryName': 'メッシュ',
    'mesh.sensorValue': '[NAME] センサーの値',
    'mesh.hostPeripheralName': 'メッシュのホストになる 【{ MESH_ID }】',
    'mesh.clientPeripheralName': 'メッシュに参加する 【{ MESH_ID }】',
    'mesh.registeredHost': 'ホストとしてメッシュに登録しました 【{ MESH_ID }】',
    'mesh.joinedMesh': 'メッシュに参加しました 【{ MESH_ID }】',
    'gui.smalruby3.extension.mesh.connectingMessage': 'メッシュのネットワークに接続しています',
    'gui.smalruby3.extension.smalrubotS1.name': 'スモウルボットS1',
    'gui.smalruby3.extension.smalrubotS1.description': 'スモウルボットS1を制御する。',
    'gui.smalruby3.extension.smalrubotS1.connectingMessage': 'スモウルボットS1に接続しています。',
    'smalrubotS1.categoryName': 'スモウルボットS1',
    'smalrubotS1.action': '[ACTION]',
    'smalrubotS1.actionAndStopAfter': '[SECS] 秒 [ACTION]',
    'smalrubotS1.bendArm': '[SECS] 秒でアームを [DEGREE] 度に曲げる',
    'smalrubotS1.getSensorValue': '[POSITION] のセンサー',
    'smalrubotS1.turnLedOn': '[POSITION] のLEDをオンにする',
    'smalrubotS1.turnLedOff': '[POSITION] のLEDをオフにする',
    'smalrubotS1.getMotorSpeed': '[POSITION] DCモーターの速度 (%)',
    'smalrubotS1.setMotorSpeed': '[POSITION] DCモーターの速度を [SPEED] (%) にする',
    'smalrubotS1.setArmCalibration': 'アームを [DEGREE] 度調整する',
    'smalrubotS1.actionMenu.forward': '進める',
    'smalrubotS1.actionMenu.backward': 'バックさせる',
    'smalrubotS1.actionMenu.turnLeft': '左に曲げる',
    'smalrubotS1.actionMenu.turnRight': '右に曲げる',
    'smalrubotS1.actionMenu.stop': '止める',
    'smalrubotS1.positionsMenu.left': '左',
    'smalrubotS1.positionsMenu.right': '右',
    'smalrubotS1.positionsMenu.touch': 'タッチ',
    'smalrubotS1.positionsMenu.light': '光',
    'smalrubotS1.positionsMenu.sound': '音',
    "gui.kanirobo1.name": "かにロボ1",
    "gui.kanirobo1.description": "かにロボブロック (簡単)",
    "gui.kanirobo2.name": "かにロボ2",
    "gui.kanirobo2.description": "かにロボブロック (普通)",    
    "gui.microcom.name": "マイコン",
    "gui.microcom.description": "マイコン (汎用)",
    "gui.mboard1.name": "MBoard1",
    "gui.mboard1.description": "松江高専マイコンボード (簡単)",
    "gui.mboard2.name": "MBoard2",
    "gui.mboard2.description": "松江高専マイコンボード (普通)",
    "gui.tools.name": "Tools",
    "gui.tools.description": "デバッグツール",
    "gui.menuBar.uploadToServer": "マイコンへ書き出し",
//MBoard共通
    "mboard.sound_C": "ド",
    "mboard.sound_D": "レ",
    "mboard.sound_E": "ミ",
    "mboard.sound_F": "ファ",
    "mboard.sound_G": "ソ",
    "mboard.sound_A": "ラ",
    "mboard.sound_H": "シ",
    "mboard.sound_hiC": "高いド",
//MBoard1
    "mboard1.led1": "LED 1[NUM1] 2[NUM2] 3[NUM3] 4[NUM4] 5[NUM5] 6[NUM6] 7[NUM7] 8[NUM8]",
    "mboard1.switch1": "スイッチ 1[SWITCH1] 2[SWITCH2] 3[SWITCH3] 4[SWITCH4]",
    "mboard1.sound1": "[SCALE]の音を鳴らす",
    "mboard1.sound2": "音を止める",
    "mboard1.temperature1": "サーミスタ温度計の温度",
//MBoard    
    "mboard2.led0": "初期化: [TEXT1]",
    "mboard2.led1": "[TEXT1] を [NUM1] にする",
    "mboard2.switch0": "初期化: [TEXT1]",
    "mboard2.switch1": "[TEXT1] が ON?",
    "mboard2.sound0": "初期化: ブザーを出力モードで使う",
    "mboard2.sound1": "[TEXT1] の音を鳴らす",
    "mboard2.sound2": "音を止める",
    "mboard2.temperature0": "初期化: 基板上のサーミスタ温度計",
    "mboard2.temperature2": "温度計測：サーミスタ温度計",
    "mboard2.temperature1": "サーミスタ温度計の温度",
//
    "microcom.gpio_output_init": "出力: GPIO[NUM1] を使う",   
    "microcom.gpio_output": "出力: GPIO[NUM1] の値を [VALUE] にする",
    "microcom.gpio_input_init": "入力: GPIO[NUM1] を使う", 
    "microcom.gpio_input": "入力: GPIO[NUM1] の値",
    "microcom.pwm_init": "PWM: GPIO[NUM1] を使う",    
    "microcom.pwm_duty": "PWM: GPIO[NUM1] のデューティー比を [VALUE] (0~1023)にする",
    "microcom.pwm_frequency": "PWM: GPIO[NUM1] 周波数を [VALUE] にする",
    "microcom.adc_init": "ADC: GPIO[NUM1] を使う", 
    "microcom.adc_volt": "ADC: GPIO[VALUE] の電圧",
    "microcom.i2c_init": "I2C: GPIO[NUM1] (SCL), GPIO[NUM2] (SDA) を使う",
    "microcom.i2c_write": "出力: I2C: アドレス [NUM1], コマンド [NUM2], 値 [NUM3]",
    "microcom.i2c_read": "入力: I2C: アドレス [NUM1], バイト数 [NUM2]",
    "microcom.uart_init": "UART-[TEXT] を使う．通信速度 [NUM]",    
    "microcom.uart_write": "出力: UART-[TEXT1]: [TEXT2]",    
    "microcom.uart_read": "入力: UART-[TEXT]",
//    
    "kanirobo2.name": "蟹ロボ",
    "kanirobo2.Menu1.forward": "前",
    "kanirobo2.Menu1.backward": "後ろ",
    "kanirobo2.Menu3.enable": "有効",
    "kanirobo2.Menu3.disable": "無効",
    "kanirobo2.command0": "モーター有効化ピンを初期化",
    "kanirobo2.command1": "モーター有効化ピンを[TEXT]化",
    "kanirobo2.command2": "モーター[TEXT]を初期化",
    "kanirobo2.command3": "モーター[TEXT]のスピードを初期化",
    "kanirobo2.command4": "モーター[TEXT1]を[TEXT2]方向にセット",
    "kanirobo2.command5": "モーター[TEXT]のスピードを[NUM](0~1023)にする",
    "kanirobo2.command6": "ライトセンサー[TEXT]を初期化",
    "kanirobo2.value0": "ライトセンサー[TEXT]の値",
    "kanirobo2.command7": "サーボモーター[TEXT]を初期化",
    "kanirobo2.command8": "サーボモーター[TEXT]の周波数を[NUM]にする",
    "kanirobo2.command9": "サーボモーター[TEXT]のデューティー比を[NUM]にする",
    "kanirobo2.value1": "[NUM]度"
};
